include ActiveXControl.con

//////////////////////////////////////////////////////////////////////////
// This file was generated automatically by AXInterfaceGenerator        //
//                                          (c)2006 RadGs Software      //
//                                                                      //
//                   PLEASE DO NOT MODIFY THIS FILE !                   //
//////////////////////////////////////////////////////////////////////////

class IMediaPlayer2 extends ActiveXControl {
	//Uncomment LICENCE_KEY if the control needs to be registered
 	function IMediaPlayer2(Owner/*, LICENCE_KEY*/) {
		//super(Owner, "MediaPlayer.MediaPlayer", LICENCE_KEY);
		super(Owner, "MediaPlayer.MediaPlayer", "");
		__AX_SET_EVENTS();
	}

/*0*/	function /*{void}*/ QueryInterface(var parameter0 /*{GUID*}*/, var parameter1 /*{void**}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_CALL_METHOD, "QueryInterface", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*1*/	function /*{ULONG}*/ AddRef()  {
		Send(MSG_AX_CALL_METHOD, "AddRef", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*2*/	function /*{ULONG}*/ Release()  {
		Send(MSG_AX_CALL_METHOD, "Release", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*3*/	function /*{void}*/ GetTypeInfoCount(var parameter0 /*{UINT*}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetTypeInfoCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*4*/	function /*{void}*/ GetTypeInfo(parameter0 /*{UINT}*/, parameter1 /*{ULONG}*/, var parameter2 /*{void**}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter2);
		Send(MSG_AX_CALL_METHOD, "GetTypeInfo", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*5*/	function /*{void}*/ GetIDsOfNames(var parameter0 /*{GUID*}*/, var parameter1 /*{char**}*/, parameter2 /*{UINT}*/, parameter3 /*{ULONG}*/, var parameter4 /*{long*}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter2);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter3);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter4);
		Send(MSG_AX_CALL_METHOD, "GetIDsOfNames", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*6*/	function /*{void}*/ Invoke(parameter0 /*{long}*/, var parameter1 /*{GUID*}*/, parameter2 /*{ULONG}*/, parameter3 /*{USHORT}*/, var parameter4 /*{DISPPARAMS*}*/, var parameter5 /*{VARIANT*}*/, var parameter6 /*{EXCEPINFO*}*/, var parameter7 /*{UINT*}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter2);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter3);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter4);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter5);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter6);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter7);
		Send(MSG_AX_CALL_METHOD, "Invoke", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*7*/	function /*{double}*/ AX_GET_CurrentPosition() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CurrentPosition", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*8*/	function /*{void}*/ AX_SET_CurrentPosition(parameter0 /*{double}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "CurrentPosition", "0");
	}

/*9*/	function /*{double}*/ AX_GET_Duration() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Duration", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*10*/	function /*{long}*/ AX_GET_ImageSourceWidth() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ImageSourceWidth", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*11*/	function /*{long}*/ AX_GET_ImageSourceHeight() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ImageSourceHeight", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*12*/	function /*{long}*/ AX_GET_MarkerCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "MarkerCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*13*/	function /*{VARIANT_BOOL}*/ AX_GET_CanScan() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CanScan", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*14*/	function /*{VARIANT_BOOL}*/ AX_GET_CanSeek() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CanSeek", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*15*/	function /*{VARIANT_BOOL}*/ AX_GET_CanSeekToMarkers() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CanSeekToMarkers", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*16*/	function /*{long}*/ AX_GET_CurrentMarker() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CurrentMarker", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*17*/	function /*{void}*/ AX_SET_CurrentMarker(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "CurrentMarker", "0");
	}

/*18*/	function /*{BSTR}*/ AX_GET_FileName() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "FileName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*19*/	function /*{void}*/ AX_SET_FileName(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "FileName", "0");
	}

/*20*/	function /*{BSTR}*/ AX_GET_SourceLink() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SourceLink", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*21*/	function /*{DATE}*/ AX_GET_CreationDate() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CreationDate", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*22*/	function /*{BSTR}*/ AX_GET_ErrorCorrection() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ErrorCorrection", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*23*/	function /*{long}*/ AX_GET_Bandwidth() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Bandwidth", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*24*/	function /*{long}*/ AX_GET_SourceProtocol() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SourceProtocol", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*25*/	function /*{long}*/ AX_GET_ReceivedPackets() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ReceivedPackets", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*26*/	function /*{long}*/ AX_GET_RecoveredPackets() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "RecoveredPackets", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*27*/	function /*{long}*/ AX_GET_LostPackets() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "LostPackets", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*28*/	function /*{long}*/ AX_GET_ReceptionQuality() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ReceptionQuality", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*29*/	function /*{long}*/ AX_GET_BufferingCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "BufferingCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*30*/	function /*{VARIANT_BOOL}*/ AX_GET_IsBroadcast() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "IsBroadcast", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*31*/	function /*{long}*/ AX_GET_BufferingProgress() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "BufferingProgress", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*32*/	function /*{BSTR}*/ AX_GET_ChannelName() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ChannelName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*33*/	function /*{BSTR}*/ AX_GET_ChannelDescription() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ChannelDescription", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*34*/	function /*{BSTR}*/ AX_GET_ChannelURL() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ChannelURL", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*35*/	function /*{BSTR}*/ AX_GET_ContactAddress() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ContactAddress", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*36*/	function /*{BSTR}*/ AX_GET_ContactPhone() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ContactPhone", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*37*/	function /*{BSTR}*/ AX_GET_ContactEmail() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ContactEmail", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*38*/	function /*{double}*/ AX_GET_BufferingTime() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "BufferingTime", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*39*/	function /*{void}*/ AX_SET_BufferingTime(parameter0 /*{double}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "BufferingTime", "0");
	}

/*40*/	function /*{VARIANT_BOOL}*/ AX_GET_AutoStart() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AutoStart", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*41*/	function /*{void}*/ AX_SET_AutoStart(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AutoStart", "0");
	}

/*42*/	function /*{VARIANT_BOOL}*/ AX_GET_AutoRewind() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AutoRewind", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*43*/	function /*{void}*/ AX_SET_AutoRewind(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AutoRewind", "0");
	}

/*44*/	function /*{double}*/ AX_GET_Rate() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Rate", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*45*/	function /*{void}*/ AX_SET_Rate(parameter0 /*{double}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Rate", "0");
	}

/*46*/	function /*{VARIANT_BOOL}*/ AX_GET_SendKeyboardEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendKeyboardEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*47*/	function /*{void}*/ AX_SET_SendKeyboardEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendKeyboardEvents", "0");
	}

/*48*/	function /*{VARIANT_BOOL}*/ AX_GET_SendMouseClickEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendMouseClickEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*49*/	function /*{void}*/ AX_SET_SendMouseClickEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendMouseClickEvents", "0");
	}

/*50*/	function /*{VARIANT_BOOL}*/ AX_GET_SendMouseMoveEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendMouseMoveEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*51*/	function /*{void}*/ AX_SET_SendMouseMoveEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendMouseMoveEvents", "0");
	}

/*52*/	function /*{long}*/ AX_GET_PlayCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "PlayCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*53*/	function /*{void}*/ AX_SET_PlayCount(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "PlayCount", "0");
	}

/*54*/	function /*{VARIANT_BOOL}*/ AX_GET_ClickToPlay() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ClickToPlay", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*55*/	function /*{void}*/ AX_SET_ClickToPlay(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ClickToPlay", "0");
	}

/*56*/	function /*{VARIANT_BOOL}*/ AX_GET_AllowScan() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AllowScan", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*57*/	function /*{void}*/ AX_SET_AllowScan(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AllowScan", "0");
	}

/*58*/	function /*{VARIANT_BOOL}*/ AX_GET_EnableContextMenu() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "EnableContextMenu", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*59*/	function /*{void}*/ AX_SET_EnableContextMenu(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "EnableContextMenu", "0");
	}

/*60*/	function /*{long}*/ AX_GET_CursorType() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CursorType", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*61*/	function /*{void}*/ AX_SET_CursorType(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "CursorType", "0");
	}

/*62*/	function /*{long}*/ AX_GET_CodecCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CodecCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*63*/	function /*{VARIANT_BOOL}*/ AX_GET_AllowChangeDisplaySize() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AllowChangeDisplaySize", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*64*/	function /*{void}*/ AX_SET_AllowChangeDisplaySize(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AllowChangeDisplaySize", "0");
	}

/*65*/	function /*{VARIANT_BOOL}*/ AX_GET_IsDurationValid() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "IsDurationValid", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*66*/	function /*{long}*/ AX_GET_OpenState() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "OpenState", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*67*/	function /*{VARIANT_BOOL}*/ AX_GET_SendOpenStateChangeEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendOpenStateChangeEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*68*/	function /*{void}*/ AX_SET_SendOpenStateChangeEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendOpenStateChangeEvents", "0");
	}

/*69*/	function /*{VARIANT_BOOL}*/ AX_GET_SendWarningEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendWarningEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*70*/	function /*{void}*/ AX_SET_SendWarningEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendWarningEvents", "0");
	}

/*71*/	function /*{VARIANT_BOOL}*/ AX_GET_SendErrorEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendErrorEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*72*/	function /*{void}*/ AX_SET_SendErrorEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendErrorEvents", "0");
	}

/*73*/	function /*{MPPlayStateConstants}*/ AX_GET_PlayState() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "PlayState", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*74*/	function /*{VARIANT_BOOL}*/ AX_GET_SendPlayStateChangeEvents() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SendPlayStateChangeEvents", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*75*/	function /*{void}*/ AX_SET_SendPlayStateChangeEvents(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SendPlayStateChangeEvents", "0");
	}

/*76*/	function /*{MPDisplaySizeConstants}*/ AX_GET_DisplaySize() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DisplaySize", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*77*/	function /*{void}*/ AX_SET_DisplaySize(parameter0 /*{MPDisplaySizeConstants}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "DisplaySize", "0");
	}

/*78*/	function /*{VARIANT_BOOL}*/ AX_GET_InvokeURLs() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "InvokeURLs", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*79*/	function /*{void}*/ AX_SET_InvokeURLs(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "InvokeURLs", "0");
	}

/*80*/	function /*{BSTR}*/ AX_GET_BaseURL() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "BaseURL", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*81*/	function /*{void}*/ AX_SET_BaseURL(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "BaseURL", "0");
	}

/*82*/	function /*{BSTR}*/ AX_GET_DefaultFrame() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DefaultFrame", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*83*/	function /*{void}*/ AX_SET_DefaultFrame(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "DefaultFrame", "0");
	}

/*84*/	function /*{VARIANT_BOOL}*/ AX_GET_HasError() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "HasError", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*85*/	function /*{BSTR}*/ AX_GET_ErrorDescription() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ErrorDescription", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*86*/	function /*{long}*/ AX_GET_ErrorCode() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ErrorCode", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*87*/	function /*{VARIANT_BOOL}*/ AX_GET_AnimationAtStart() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AnimationAtStart", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*88*/	function /*{void}*/ AX_SET_AnimationAtStart(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AnimationAtStart", "0");
	}

/*89*/	function /*{VARIANT_BOOL}*/ AX_GET_TransparentAtStart() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "TransparentAtStart", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*90*/	function /*{void}*/ AX_SET_TransparentAtStart(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "TransparentAtStart", "0");
	}

/*91*/	function /*{long}*/ AX_GET_Volume() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Volume", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*92*/	function /*{void}*/ AX_SET_Volume(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Volume", "0");
	}

/*93*/	function /*{long}*/ AX_GET_Balance() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Balance", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*94*/	function /*{void}*/ AX_SET_Balance(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Balance", "0");
	}

/*95*/	function /*{MPReadyStateConstants}*/ AX_GET_ReadyState() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ReadyState", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*96*/	function /*{double}*/ AX_GET_SelectionStart() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SelectionStart", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*97*/	function /*{void}*/ AX_SET_SelectionStart(parameter0 /*{double}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SelectionStart", "0");
	}

/*98*/	function /*{double}*/ AX_GET_SelectionEnd() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SelectionEnd", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*99*/	function /*{void}*/ AX_SET_SelectionEnd(parameter0 /*{double}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SelectionEnd", "0");
	}

/*100*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowDisplay() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowDisplay", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*101*/	function /*{void}*/ AX_SET_ShowDisplay(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowDisplay", "0");
	}

/*102*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowControls() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowControls", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*103*/	function /*{void}*/ AX_SET_ShowControls(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowControls", "0");
	}

/*104*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowPositionControls() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowPositionControls", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*105*/	function /*{void}*/ AX_SET_ShowPositionControls(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowPositionControls", "0");
	}

/*106*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowTracker() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowTracker", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*107*/	function /*{void}*/ AX_SET_ShowTracker(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowTracker", "0");
	}

/*108*/	function /*{VARIANT_BOOL}*/ AX_GET_EnablePositionControls() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "EnablePositionControls", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*109*/	function /*{void}*/ AX_SET_EnablePositionControls(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "EnablePositionControls", "0");
	}

/*110*/	function /*{VARIANT_BOOL}*/ AX_GET_EnableTracker() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "EnableTracker", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*111*/	function /*{void}*/ AX_SET_EnableTracker(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "EnableTracker", "0");
	}

/*112*/	function /*{VARIANT_BOOL}*/ AX_GET_Enabled() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Enabled", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*113*/	function /*{void}*/ AX_SET_Enabled(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Enabled", "0");
	}

/*114*/	function /*{OLE_COLOR}*/ AX_GET_DisplayForeColor() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DisplayForeColor", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*115*/	function /*{void}*/ AX_SET_DisplayForeColor(parameter0 /*{OLE_COLOR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "DisplayForeColor", "0");
	}

/*116*/	function /*{OLE_COLOR}*/ AX_GET_DisplayBackColor() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DisplayBackColor", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*117*/	function /*{void}*/ AX_SET_DisplayBackColor(parameter0 /*{OLE_COLOR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "DisplayBackColor", "0");
	}

/*118*/	function /*{MPDisplayModeConstants}*/ AX_GET_DisplayMode() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DisplayMode", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*119*/	function /*{void}*/ AX_SET_DisplayMode(parameter0 /*{MPDisplayModeConstants}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "DisplayMode", "0");
	}

/*120*/	function /*{VARIANT_BOOL}*/ AX_GET_VideoBorder3D() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "VideoBorder3D", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*121*/	function /*{void}*/ AX_SET_VideoBorder3D(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "VideoBorder3D", "0");
	}

/*122*/	function /*{long}*/ AX_GET_VideoBorderWidth() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "VideoBorderWidth", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*123*/	function /*{void}*/ AX_SET_VideoBorderWidth(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "VideoBorderWidth", "0");
	}

/*124*/	function /*{OLE_COLOR}*/ AX_GET_VideoBorderColor() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "VideoBorderColor", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*125*/	function /*{void}*/ AX_SET_VideoBorderColor(parameter0 /*{OLE_COLOR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "VideoBorderColor", "0");
	}

/*126*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowGotoBar() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowGotoBar", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*127*/	function /*{void}*/ AX_SET_ShowGotoBar(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowGotoBar", "0");
	}

/*128*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowStatusBar() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowStatusBar", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*129*/	function /*{void}*/ AX_SET_ShowStatusBar(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowStatusBar", "0");
	}

/*130*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowCaptioning() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowCaptioning", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*131*/	function /*{void}*/ AX_SET_ShowCaptioning(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowCaptioning", "0");
	}

/*132*/	function /*{VARIANT_BOOL}*/ AX_GET_ShowAudioControls() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ShowAudioControls", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*133*/	function /*{void}*/ AX_SET_ShowAudioControls(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "ShowAudioControls", "0");
	}

/*134*/	function /*{BSTR}*/ AX_GET_CaptioningID() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CaptioningID", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*135*/	function /*{void}*/ AX_SET_CaptioningID(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "CaptioningID", "0");
	}

/*136*/	function /*{VARIANT_BOOL}*/ AX_GET_Mute() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Mute", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*137*/	function /*{void}*/ AX_SET_Mute(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Mute", "0");
	}

/*138*/	function /*{VARIANT_BOOL}*/ AX_GET_CanPreview() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "CanPreview", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*139*/	function /*{VARIANT_BOOL}*/ AX_GET_PreviewMode() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "PreviewMode", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*140*/	function /*{void}*/ AX_SET_PreviewMode(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "PreviewMode", "0");
	}

/*141*/	function /*{VARIANT_BOOL}*/ AX_GET_HasMultipleItems() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "HasMultipleItems", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*142*/	function /*{long}*/ AX_GET_Language() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "Language", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*143*/	function /*{void}*/ AX_SET_Language(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "Language", "0");
	}

/*144*/	function /*{long}*/ AX_GET_AudioStream() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AudioStream", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*145*/	function /*{void}*/ AX_SET_AudioStream(parameter0 /*{long}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AudioStream", "0");
	}

/*146*/	function /*{BSTR}*/ AX_GET_SAMIStyle() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SAMIStyle", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*147*/	function /*{void}*/ AX_SET_SAMIStyle(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SAMIStyle", "0");
	}

/*148*/	function /*{BSTR}*/ AX_GET_SAMILang() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SAMILang", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*149*/	function /*{void}*/ AX_SET_SAMILang(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SAMILang", "0");
	}

/*150*/	function /*{BSTR}*/ AX_GET_SAMIFileName() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "SAMIFileName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*151*/	function /*{void}*/ AX_SET_SAMIFileName(parameter0 /*{BSTR}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "SAMIFileName", "0");
	}

/*152*/	function /*{long}*/ AX_GET_StreamCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "StreamCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*153*/	function /*{BSTR}*/ AX_GET_ClientId() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ClientId", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*154*/	function /*{long}*/ AX_GET_ConnectionSpeed() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ConnectionSpeed", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*155*/	function /*{VARIANT_BOOL}*/ AX_GET_AutoSize() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "AutoSize", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*156*/	function /*{void}*/ AX_SET_AutoSize(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "AutoSize", "0");
	}

/*157*/	function /*{VARIANT_BOOL}*/ AX_GET_EnableFullScreenControls() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "EnableFullScreenControls", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*158*/	function /*{void}*/ AX_SET_EnableFullScreenControls(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "EnableFullScreenControls", "0");
	}

/*159*/	function /*{IDispatch*}*/ AX_GET_ActiveMovie() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "ActiveMovie", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*160*/	function /*{IDispatch*}*/ AX_GET_NSPlay() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "NSPlay", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*161*/	function /*{VARIANT_BOOL}*/ AX_GET_WindowlessVideo() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "WindowlessVideo", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*162*/	function /*{void}*/ AX_SET_WindowlessVideo(parameter0 /*{VARIANT_BOOL}*/) /*{propput}*/ {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_SET_PROPERTY, "WindowlessVideo", "0");
	}

/*163*/	function /*{void}*/ Play()  {
		Send(MSG_AX_CALL_METHOD, "Play", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*164*/	function /*{void}*/ Stop()  {
		Send(MSG_AX_CALL_METHOD, "Stop", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*165*/	function /*{void}*/ Pause()  {
		Send(MSG_AX_CALL_METHOD, "Pause", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*166*/	function /*{double}*/ GetMarkerTime(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetMarkerTime", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*167*/	function /*{BSTR}*/ GetMarkerName(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetMarkerName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*168*/	function /*{void}*/ AboutBox()  {
		Send(MSG_AX_CALL_METHOD, "AboutBox", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*169*/	function /*{VARIANT_BOOL}*/ GetCodecInstalled(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetCodecInstalled", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*170*/	function /*{BSTR}*/ GetCodecDescription(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetCodecDescription", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*171*/	function /*{BSTR}*/ GetCodecURL(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetCodecURL", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*172*/	function /*{BSTR}*/ GetMoreInfoURL(parameter0 /*{MPMoreInfoType}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetMoreInfoURL", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*173*/	function /*{BSTR}*/ GetMediaInfoString(parameter0 /*{MPMediaInfoType}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetMediaInfoString", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*174*/	function /*{void}*/ Cancel()  {
		Send(MSG_AX_CALL_METHOD, "Cancel", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*175*/	function /*{void}*/ Open(parameter0 /*{BSTR}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "Open", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*176*/	function /*{VARIANT_BOOL}*/ IsSoundCardEnabled()  {
		Send(MSG_AX_CALL_METHOD, "IsSoundCardEnabled", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*177*/	function /*{void}*/ Next()  {
		Send(MSG_AX_CALL_METHOD, "Next", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*178*/	function /*{void}*/ Previous()  {
		Send(MSG_AX_CALL_METHOD, "Previous", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*179*/	function /*{void}*/ StreamSelect(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "StreamSelect", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*180*/	function /*{void}*/ FastForward()  {
		Send(MSG_AX_CALL_METHOD, "FastForward", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*181*/	function /*{void}*/ FastReverse()  {
		Send(MSG_AX_CALL_METHOD, "FastReverse", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*182*/	function /*{BSTR}*/ GetStreamName(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetStreamName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*183*/	function /*{long}*/ GetStreamGroup(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetStreamGroup", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*184*/	function /*{VARIANT_BOOL}*/ GetStreamSelected(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "GetStreamSelected", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*185*/	function /*{IMediaPlayerDvd*}*/ AX_GET_DVD() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "DVD", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*186*/	function /*{BSTR}*/ GetMediaParameter(parameter0 /*{long}*/, parameter1 /*{BSTR}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_CALL_METHOD, "GetMediaParameter", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*187*/	function /*{BSTR}*/ GetMediaParameterName(parameter0 /*{long}*/, parameter1 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_ADD_PARAMETER, "0", parameter1);
		Send(MSG_AX_CALL_METHOD, "GetMediaParameterName", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*188*/	function /*{long}*/ AX_GET_EntryCount() /*{propget}*/ {
		Send(MSG_AX_GET_PROPERTY, "EntryCount", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*189*/	function /*{long}*/ GetCurrentEntry()  {
		Send(MSG_AX_CALL_METHOD, "GetCurrentEntry", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*190*/	function /*{void}*/ SetCurrentEntry(parameter0 /*{long}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "SetCurrentEntry", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

/*191*/	function /*{void}*/ ShowDialog(parameter0 /*{MPShowDialogConstants}*/)  {
		Send(MSG_AX_ADD_PARAMETER, "0", parameter0);
		Send(MSG_AX_CALL_METHOD, "ShowDialog", "0");
		Send(MSG_AX_GET_RESULT, "0", "0");
		WaitMessage(var SENDER, var MSG_ID=MSG_AX_GET_RESULT, var TARGET, var VALUE);
		return VALUE;
	}

//---------------- BEGIN OF EVENTS INTERFACE (info only) -----------------//
	//Event syntax:void DVDNotify(parameter0<long>, parameter1<long>, parameter2<long>) 
	public property _OnDVDNotify { get Get_OnDVDNotify, set Set_OnDVDNotify }
	public function Get_OnDVDNotify() {
		return _AX_EVENTS[1];
	}

	public function Set_OnDVDNotify(delegate deleg) {
		_AX_EVENTS[1]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",1);
	}

	//Event syntax:void EndOfStream(parameter0<long>) 
	public property _OnEndOfStream { get Get_OnEndOfStream, set Set_OnEndOfStream }
	public function Get_OnEndOfStream() {
		return _AX_EVENTS[2];
	}

	public function Set_OnEndOfStream(delegate deleg) {
		_AX_EVENTS[2]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",2);
	}

	//Event syntax:void KeyDown(parameter0<short>, parameter1<short>) 
	public property _OnKeyDown { get Get_OnKeyDown, set Set_OnKeyDown }
	public function Get_OnKeyDown() {
		return _AX_EVENTS[3];
	}

	public function Set_OnKeyDown(delegate deleg) {
		_AX_EVENTS[3]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",3);
	}

	//Event syntax:void KeyUp(parameter0<short>, parameter1<short>) 
	public property _OnKeyUp { get Get_OnKeyUp, set Set_OnKeyUp }
	public function Get_OnKeyUp() {
		return _AX_EVENTS[4];
	}

	public function Set_OnKeyUp(delegate deleg) {
		_AX_EVENTS[4]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",4);
	}

	//Event syntax:void KeyPress(parameter0<short>) 
	public property _OnKeyPress { get Get_OnKeyPress, set Set_OnKeyPress }
	public function Get_OnKeyPress() {
		return _AX_EVENTS[5];
	}

	public function Set_OnKeyPress(delegate deleg) {
		_AX_EVENTS[5]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",5);
	}

	//Event syntax:void MouseMove(parameter0<short>, parameter1<short>, parameter2<OLE_XPOS_PIXELS>, parameter3<OLE_YPOS_PIXELS>) 
	public property _OnMouseMove { get Get_OnMouseMove, set Set_OnMouseMove }
	public function Get_OnMouseMove() {
		return _AX_EVENTS[6];
	}

	public function Set_OnMouseMove(delegate deleg) {
		_AX_EVENTS[6]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",6);
	}

	//Event syntax:void MouseDown(parameter0<short>, parameter1<short>, parameter2<OLE_XPOS_PIXELS>, parameter3<OLE_YPOS_PIXELS>) 
	public property _OnMouseDown { get Get_OnMouseDown, set Set_OnMouseDown }
	public function Get_OnMouseDown() {
		return _AX_EVENTS[7];
	}

	public function Set_OnMouseDown(delegate deleg) {
		_AX_EVENTS[7]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",7);
	}

	//Event syntax:void MouseUp(parameter0<short>, parameter1<short>, parameter2<OLE_XPOS_PIXELS>, parameter3<OLE_YPOS_PIXELS>) 
	public property _OnMouseUp { get Get_OnMouseUp, set Set_OnMouseUp }
	public function Get_OnMouseUp() {
		return _AX_EVENTS[8];
	}

	public function Set_OnMouseUp(delegate deleg) {
		_AX_EVENTS[8]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",8);
	}

	//Event syntax:void Click(parameter0<short>, parameter1<short>, parameter2<OLE_XPOS_PIXELS>, parameter3<OLE_YPOS_PIXELS>) 
	public property _OnClick { get Get_OnClick, set Set_OnClick }
	public function Get_OnClick() {
		return _AX_EVENTS[9];
	}

	public function Set_OnClick(delegate deleg) {
		_AX_EVENTS[9]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",9);
	}

	//Event syntax:void DblClick(parameter0<short>, parameter1<short>, parameter2<OLE_XPOS_PIXELS>, parameter3<OLE_YPOS_PIXELS>) 
	public property _OnDblClick { get Get_OnDblClick, set Set_OnDblClick }
	public function Get_OnDblClick() {
		return _AX_EVENTS[10];
	}

	public function Set_OnDblClick(delegate deleg) {
		_AX_EVENTS[10]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",10);
	}

	//Event syntax:void OpenStateChange(parameter0<long>, parameter1<long>) 
	public property _OnOpenStateChange { get Get_OnOpenStateChange, set Set_OnOpenStateChange }
	public function Get_OnOpenStateChange() {
		return _AX_EVENTS[11];
	}

	public function Set_OnOpenStateChange(delegate deleg) {
		_AX_EVENTS[11]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",11);
	}

	//Event syntax:void PlayStateChange(parameter0<long>, parameter1<long>) 
	public property _OnPlayStateChange { get Get_OnPlayStateChange, set Set_OnPlayStateChange }
	public function Get_OnPlayStateChange() {
		return _AX_EVENTS[12];
	}

	public function Set_OnPlayStateChange(delegate deleg) {
		_AX_EVENTS[12]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",12);
	}

	//Event syntax:void ScriptCommand(parameter0<BSTR>, parameter1<BSTR>) 
	public property _OnScriptCommand { get Get_OnScriptCommand, set Set_OnScriptCommand }
	public function Get_OnScriptCommand() {
		return _AX_EVENTS[13];
	}

	public function Set_OnScriptCommand(delegate deleg) {
		_AX_EVENTS[13]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",13);
	}

	//Event syntax:void Buffering(parameter0<VARIANT_BOOL>) 
	public property _OnBuffering { get Get_OnBuffering, set Set_OnBuffering }
	public function Get_OnBuffering() {
		return _AX_EVENTS[14];
	}

	public function Set_OnBuffering(delegate deleg) {
		_AX_EVENTS[14]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",14);
	}

	//Event syntax:void Error() 
	public property _OnError { get Get_OnError, set Set_OnError }
	public function Get_OnError() {
		return _AX_EVENTS[15];
	}

	public function Set_OnError(delegate deleg) {
		_AX_EVENTS[15]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",15);
	}

	//Event syntax:void MarkerHit(parameter0<long>) 
	public property _OnMarkerHit { get Get_OnMarkerHit, set Set_OnMarkerHit }
	public function Get_OnMarkerHit() {
		return _AX_EVENTS[16];
	}

	public function Set_OnMarkerHit(delegate deleg) {
		_AX_EVENTS[16]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",16);
	}

	//Event syntax:void Warning(parameter0<long>, parameter1<long>, parameter2<BSTR>) 
	public property _OnWarning { get Get_OnWarning, set Set_OnWarning }
	public function Get_OnWarning() {
		return _AX_EVENTS[17];
	}

	public function Set_OnWarning(delegate deleg) {
		_AX_EVENTS[17]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",17);
	}

	//Event syntax:void NewStream() 
	public property _OnNewStream { get Get_OnNewStream, set Set_OnNewStream }
	public function Get_OnNewStream() {
		return _AX_EVENTS[18];
	}

	public function Set_OnNewStream(delegate deleg) {
		_AX_EVENTS[18]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",18);
	}

	//Event syntax:void Disconnect(parameter0<long>) 
	public property _OnDisconnect { get Get_OnDisconnect, set Set_OnDisconnect }
	public function Get_OnDisconnect() {
		return _AX_EVENTS[19];
	}

	public function Set_OnDisconnect(delegate deleg) {
		_AX_EVENTS[19]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",19);
	}

	//Event syntax:void ReadyStateChange(parameter0<MPReadyStateConstants>) 
	public property _OnReadyStateChange { get Get_OnReadyStateChange, set Set_OnReadyStateChange }
	public function Get_OnReadyStateChange() {
		return _AX_EVENTS[20];
	}

	public function Set_OnReadyStateChange(delegate deleg) {
		_AX_EVENTS[20]=deleg;
		Send(MSG_AX_ADD_EVENT,"0",20);
	}

//------------------ END OF EVENTS INTERFACE (info only) -----------------//

	public property CurrentPosition { get AX_GET_CurrentPosition, set AX_SET_CurrentPosition }
	public property Duration { get AX_GET_Duration }
	public property ImageSourceWidth { get AX_GET_ImageSourceWidth }
	public property ImageSourceHeight { get AX_GET_ImageSourceHeight }
	public property MarkerCount { get AX_GET_MarkerCount }
	public property CanScan { get AX_GET_CanScan }
	public property CanSeek { get AX_GET_CanSeek }
	public property CanSeekToMarkers { get AX_GET_CanSeekToMarkers }
	public property CurrentMarker { get AX_GET_CurrentMarker, set AX_SET_CurrentMarker }
	public property FileName { get AX_GET_FileName, set AX_SET_FileName }
	public property SourceLink { get AX_GET_SourceLink }
	public property CreationDate { get AX_GET_CreationDate }
	public property ErrorCorrection { get AX_GET_ErrorCorrection }
	public property Bandwidth { get AX_GET_Bandwidth }
	public property SourceProtocol { get AX_GET_SourceProtocol }
	public property ReceivedPackets { get AX_GET_ReceivedPackets }
	public property RecoveredPackets { get AX_GET_RecoveredPackets }
	public property LostPackets { get AX_GET_LostPackets }
	public property ReceptionQuality { get AX_GET_ReceptionQuality }
	public property BufferingCount { get AX_GET_BufferingCount }
	public property IsBroadcast { get AX_GET_IsBroadcast }
	public property BufferingProgress { get AX_GET_BufferingProgress }
	public property ChannelName { get AX_GET_ChannelName }
	public property ChannelDescription { get AX_GET_ChannelDescription }
	public property ChannelURL { get AX_GET_ChannelURL }
	public property ContactAddress { get AX_GET_ContactAddress }
	public property ContactPhone { get AX_GET_ContactPhone }
	public property ContactEmail { get AX_GET_ContactEmail }
	public property BufferingTime { get AX_GET_BufferingTime, set AX_SET_BufferingTime }
	public property AutoStart { get AX_GET_AutoStart, set AX_SET_AutoStart }
	public property AutoRewind { get AX_GET_AutoRewind, set AX_SET_AutoRewind }
	public property Rate { get AX_GET_Rate, set AX_SET_Rate }
	public property SendKeyboardEvents { get AX_GET_SendKeyboardEvents, set AX_SET_SendKeyboardEvents }
	public property SendMouseClickEvents { get AX_GET_SendMouseClickEvents, set AX_SET_SendMouseClickEvents }
	public property SendMouseMoveEvents { get AX_GET_SendMouseMoveEvents, set AX_SET_SendMouseMoveEvents }
	public property PlayCount { get AX_GET_PlayCount, set AX_SET_PlayCount }
	public property ClickToPlay { get AX_GET_ClickToPlay, set AX_SET_ClickToPlay }
	public property AllowScan { get AX_GET_AllowScan, set AX_SET_AllowScan }
	public property EnableContextMenu { get AX_GET_EnableContextMenu, set AX_SET_EnableContextMenu }
	public property CursorType { get AX_GET_CursorType, set AX_SET_CursorType }
	public property CodecCount { get AX_GET_CodecCount }
	public property AllowChangeDisplaySize { get AX_GET_AllowChangeDisplaySize, set AX_SET_AllowChangeDisplaySize }
	public property IsDurationValid { get AX_GET_IsDurationValid }
	public property OpenState { get AX_GET_OpenState }
	public property SendOpenStateChangeEvents { get AX_GET_SendOpenStateChangeEvents, set AX_SET_SendOpenStateChangeEvents }
	public property SendWarningEvents { get AX_GET_SendWarningEvents, set AX_SET_SendWarningEvents }
	public property SendErrorEvents { get AX_GET_SendErrorEvents, set AX_SET_SendErrorEvents }
	public property PlayState { get AX_GET_PlayState }
	public property SendPlayStateChangeEvents { get AX_GET_SendPlayStateChangeEvents, set AX_SET_SendPlayStateChangeEvents }
	public property DisplaySize { get AX_GET_DisplaySize, set AX_SET_DisplaySize }
	public property InvokeURLs { get AX_GET_InvokeURLs, set AX_SET_InvokeURLs }
	public property BaseURL { get AX_GET_BaseURL, set AX_SET_BaseURL }
	public property DefaultFrame { get AX_GET_DefaultFrame, set AX_SET_DefaultFrame }
	public property HasError { get AX_GET_HasError }
	public property ErrorDescription { get AX_GET_ErrorDescription }
	public property ErrorCode { get AX_GET_ErrorCode }
	public property AnimationAtStart { get AX_GET_AnimationAtStart, set AX_SET_AnimationAtStart }
	public property TransparentAtStart { get AX_GET_TransparentAtStart, set AX_SET_TransparentAtStart }
	public property Volume { get AX_GET_Volume, set AX_SET_Volume }
	public property Balance { get AX_GET_Balance, set AX_SET_Balance }
	public property ReadyState { get AX_GET_ReadyState }
	public property SelectionStart { get AX_GET_SelectionStart, set AX_SET_SelectionStart }
	public property SelectionEnd { get AX_GET_SelectionEnd, set AX_SET_SelectionEnd }
	public property ShowDisplay { get AX_GET_ShowDisplay, set AX_SET_ShowDisplay }
	public property ShowControls { get AX_GET_ShowControls, set AX_SET_ShowControls }
	public property ShowPositionControls { get AX_GET_ShowPositionControls, set AX_SET_ShowPositionControls }
	public property ShowTracker { get AX_GET_ShowTracker, set AX_SET_ShowTracker }
	public property EnablePositionControls { get AX_GET_EnablePositionControls, set AX_SET_EnablePositionControls }
	public property EnableTracker { get AX_GET_EnableTracker, set AX_SET_EnableTracker }
	public property MediaEnabled { get AX_GET_Enabled, set AX_SET_Enabled }
	public property DisplayForeColor { get AX_GET_DisplayForeColor, set AX_SET_DisplayForeColor }
	public property DisplayBackColor { get AX_GET_DisplayBackColor, set AX_SET_DisplayBackColor }
	public property DisplayMode { get AX_GET_DisplayMode, set AX_SET_DisplayMode }
	public property VideoBorder3D { get AX_GET_VideoBorder3D, set AX_SET_VideoBorder3D }
	public property VideoBorderWidth { get AX_GET_VideoBorderWidth, set AX_SET_VideoBorderWidth }
	public property VideoBorderColor { get AX_GET_VideoBorderColor, set AX_SET_VideoBorderColor }
	public property ShowGotoBar { get AX_GET_ShowGotoBar, set AX_SET_ShowGotoBar }
	public property ShowStatusBar { get AX_GET_ShowStatusBar, set AX_SET_ShowStatusBar }
	public property ShowCaptioning { get AX_GET_ShowCaptioning, set AX_SET_ShowCaptioning }
	public property ShowAudioControls { get AX_GET_ShowAudioControls, set AX_SET_ShowAudioControls }
	public property CaptioningID { get AX_GET_CaptioningID, set AX_SET_CaptioningID }
	public property Mute { get AX_GET_Mute, set AX_SET_Mute }
	public property CanPreview { get AX_GET_CanPreview }
	public property PreviewMode { get AX_GET_PreviewMode, set AX_SET_PreviewMode }
	public property HasMultipleItems { get AX_GET_HasMultipleItems }
	public property Language { get AX_GET_Language, set AX_SET_Language }
	public property AudioStream { get AX_GET_AudioStream, set AX_SET_AudioStream }
	public property SAMIStyle { get AX_GET_SAMIStyle, set AX_SET_SAMIStyle }
	public property SAMILang { get AX_GET_SAMILang, set AX_SET_SAMILang }
	public property SAMIFileName { get AX_GET_SAMIFileName, set AX_SET_SAMIFileName }
	public property StreamCount { get AX_GET_StreamCount }
	public property ClientId { get AX_GET_ClientId }
	public property ConnectionSpeed { get AX_GET_ConnectionSpeed }
	public property AutoSize { get AX_GET_AutoSize, set AX_SET_AutoSize }
	public property EnableFullScreenControls { get AX_GET_EnableFullScreenControls, set AX_SET_EnableFullScreenControls }
	public property ActiveMovie { get AX_GET_ActiveMovie }
	public property NSPlay { get AX_GET_NSPlay }
	public property WindowlessVideo { get AX_GET_WindowlessVideo, set AX_SET_WindowlessVideo }
	public property DVD { get AX_GET_DVD }
	public property EntryCount { get AX_GET_EntryCount }
}
