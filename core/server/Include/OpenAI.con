import standard.lib.json
include async.url.con
include Loop.con

class OpenAI {
	var OPENAI_API_KEY;
	var data;

	OpenAI(key) {
		this.OPENAI_API_KEY = key;
	}

	v1(json) {
		data = null;
		if (typeof json != "string")
			json = JSONSerialize(json, true, 2);

		return asyncRequest::fetch("https://api.openai.com/v1/completions", "POST", [
			"Content-Type" => "application/json",
			"Authorization" => "Bearer ${OPENAI_API_KEY}"
		], json);
	}

	run(json, add_to_loop = true) {
		data = null;
		var url = this.v1(json);
		if (url) {
			if (add_to_loop)
				Loop::add(url);
			return url._promise;
		}
		return url;
	}

	chat(json) {
		data = null;
		if (typeof json != "string")
			json = JSONSerialize(json, true, 2);

		return asyncRequest::fetch("https://api.openai.com/v1/chat/completions", "POST", [
			"Content-Type" => "application/json",
			"Authorization" => "Bearer ${OPENAI_API_KEY}"
		], json, 2000, 16000);
	}

	runChat(json, add_to_loop = true) {
		data = null;
		var url = this.chat(json);
		if (url) {
			if (add_to_loop)
				Loop::add(url);
			return url._promise;
		}
		return url;
	}

	whisper(audio_file, model = "whisper-1") {
		return asyncRequest::fetch("https://api.openai.com/v1/audio/transcriptions", "POST", [
			"Content-Type" => "multipart/form-data",
			"Authorization" => "Bearer ${OPENAI_API_KEY}"
		], ["model" => model, "name=\"file\"; filename=\"filename.mp3\"" => audio_file]);
	}

	runWhisper(audio_file, model = "whisper-1") {
		data = null;
		var url = this.whisper(audio_file, model);
		if (url) {
			Loop::add(url);
			return url._promise;
		}
		return url;
	}

	static parse(request) {
		if (!request)
			return null;
		return JSONDeserialize(request.data);
	}

	static simple(request) {
		var data = OpenAI::parse(request);
		if ((!data) || (!data["choices"]))
			return "";
		var choice = data["choices"][0];
		if (IsSet(choice, "text"))
			return trim("" + choice["text"]);
		if (IsSet(choice, "message"))
			return trim("" + choice["message"]["content"]);
		return "";
	}
}
