include XapianDocument.con

class XapianMSetIterator {
	protected var THISREF=null;
	public property REF { get THISREF }

	public function XapianMSetIterator(number ref) {
		this.THISREF=ref;
	}

	public function next() {
		var result=XapianMSetIterator__next(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function prev() {
		var result=XapianMSetIterator__prev(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public operator ++ () {
		return this.next();
	}

	public operator -- () {
		return this.prev();
	}

	public function get_value() {
		var result=XapianMSetIterator__get_value(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function get_description() {
		var result=XapianMSetIterator__get_description(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function equal(XapianMSetIterator iter) {
		var result=XapianMSetIterator__equal(this->THISREF, var exc, iter.REF);
		if (exc)
			throw exc;
		return result;
	}

	public operator ==(XapianMSetIterator iter) {
		return equal(iter);
	}

	public operator !=(XapianMSetIterator iter) {
		return !equal(iter);
	}	

	public function get_document() {
		var result=new XapianDocument(XapianMSetIterator__get_document(this->THISREF, var exc));
		if (exc)
			throw exc;
		return result;
	}

	public function get_rank() {
		var result=XapianMSetIterator__get_rank(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function get_weight() {
		var result=XapianMSetIterator__get_weight(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function get_collapse_key() {
		var result=XapianMSetIterator__get_collapse_key(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function get_collapse_count() {
		var result=XapianMSetIterator__get_collapse_count(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

	public function get_percent() {
		var result=XapianMSetIterator__get_percent(this->THISREF, var exc);
		if (exc)
			throw exc;
		return result;
	}

}
