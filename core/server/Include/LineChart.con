include PieChart.con

define LINE_CHART_LEFT	85

class LineChart {

	static function Do(array data, width=600, height=400, type=0, decimals=2, bgcolor="", h=-1, s=0.90, v=0.60) {
		var left=LINE_CHART_LEFT;
		var base_left=left+5;
		var delta_height=height-80;
		var delta_width=width-left*2;

		var xsize=14;

		if (length data>19) {
			xsize=10;
		} else
		if (length data>8) {
			xsize=12;
		}

		var result="<?xml version=\"1.0\" standalone=\"no\" ?>\n"+
		"<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\"\n"+
		"	\"http://www.w3.org/TR/2001/PR-SVG-20010719/DTD/svg10.dtd\">\n"+
		"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"$width\" height=\"$height\">\n"+
		"<defs>\n"+
		"<style type=\"text/css\">\n"+
		"<![CDATA[\n";
		if (bgcolor) {
			result+=".svgBackground{\n"+
				"	fill:$bgcolor;\n"+
				"	fill-opacity:0.8;\n"+
				"}\n";
		}
		result+=".graphBackground{\n"+
		"	fill:#f0f0f0;\n"+
		"	fill-opacity:0.5;\n"+
		"}\n"+
		".mainTitle{\n"+
		"	text-anchor: middle;\n"+
		"	fill: #000000;\n"+
		"	font-size: 14px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".subTitle{\n"+
		"	text-anchor: middle;\n"+
		"	fill: #999999;\n"+
		"	font-size: 12px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".axis{\n"+
		"	stroke: #000000;\n"+
		"	stroke-width: 1px;\n"+
		"}\n"+
		".guideLines{\n"+
		"	stroke: #666666;\n"+
		"	stroke-width: 1px;\n"+
		"	stroke-dasharray: 5 5;\n"+
		"}\n"+
		".xAxisLabels{\n"+
		"	text-anchor: middle;\n"+
		"	fill: #000000;\n"+
		"	font-size: ${xsize}px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".yAxisLabels{\n"+
		"	text-anchor: end;\n"+
		"	fill: #000000;\n"+
		"	font-size: 12px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".xAxisTitle{\n"+
		"	text-anchor: middle;\n"+
		"	fill: #ff0000;\n"+
		"	font-size: 14px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".yAxisTitle{\n"+
		"	fill: #ff0000;\n"+
		"	writing-mode: tb; \n"+
		"	glyph-orientation-vertical: 0;\n"+
		"	text-anchor: middle;\n"+
		"	font-size: 14px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"}\n"+
		".dataPointLabel{\n"+
		"	fill: #000000;\n"+
		"	text-anchor:middle;\n"+
		"	font-size: 10px;\n"+
		"	font-family: arial, sans-serif;\n"+
		"	font-weight: normal;\n"+
		"} ]]>\n"+
		"</style>\n"+
		"</defs>\n";

		if (bgcolor)
			result+="<rect x=\"0\" y=\"0\" rx=\"20\" ry=\"20\" width=\"$width\" height=\"$height\" class=\"svgBackground\"/>\n";

		result+="<rect x=\"$base_left\" y=\"45\" width=\"$delta_width\" height=\"${delta_height-38}\" class=\"graphBackground\"/>\n";

		var start=delta_height+9;
		var increment=delta_height/10;

		var series=data[0];
		var time_interval=new [];
		var len=length data;

		var max=-0xFFFFFFF;
		var min=0xFFFFFFF;

		var[] value_vector;
		var points=0;


		for (var i=1;i<len;i++) {
			var item=data[i];
			if (item) {
				var len2=length item;
				var pos=i-1;

				time_interval[length time_interval]=item[0];
				if (len2>1)
					points++;
				for (var j=1;j<len2;j++) {
					var item2=value (""+item[j]);

					var target=value_vector[j-1];
					if (!target) {
						target=new [];
						value_vector[j-1]=target;
					}
					target[length target]=item2;
					if (item2>max)
						max=item2;
					if (item2<min)
						min=item2;
				}
			}
		}
		if (points)
			points--;

		result+="<path d=\"M$base_left 45 v${start-45}\" class=\"axis\" id=\"xAxis\"/>\n"+
		"<path d=\"M$base_left $start h$delta_width\" class=\"axis\" id=\"yAxis\"/>\n";

		var end=0;
		if ((value_vector) && (max>-0xFFFFFFF) && (min<0xFFFFFFF) && (max!=min)) {
			var delta=max-min;
			var offset=delta/9;

			pos=min;
			var s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
			start-=increment;
			pos=pos+offset;
			s_pos=number_format(pos, decimals, ".", ",");
			result+="<text x=\"$left\" y=\"$start\" class=\"yAxisLabels\"><![CDATA[$s_pos]]></text>\n";
			result+="<path d=\"M$base_left $start h$delta_width\" class=\"guideLines\"/>\n";
		}

		var len_series=length time_interval;
		var ser_prec="";
		var xaxis=delta_height+30;
		if (points)
			var delta_x=delta_width/points;
		else
			delta_x=delta_width;

		pos=left;
		var idx=0;
		for (i=0;i<len_series;i++) {
			var ser=time_interval[i];
			if (ser) {
				if (ser_prec!=ser) {
					if (idx%2)
						result+="<text x=\"$pos\" y=\"${xaxis+xsize}\" class=\"xAxisLabels\"><![CDATA[$ser]]></text>\n";
					else
						result+="<text x=\"$pos\" y=\"$xaxis\" class=\"xAxisLabels\"><![CDATA[$ser]]></text>\n";
					ser_prec=ser;
	
					if (len_series>8)
						idx++;
				}
			}
			pos+=delta_x;
		}

		len=length value_vector;

		end=start;
		start=delta_height+9;

		if ((delta) && (points) && len) {
			var real_points=abs(start-end)/delta;

			var angle=360/len;
			if (angle>30)
				angle=30;

			if (len<=3)
				angle=120;
			else
			if (angle<=6)
				angle=60;

			if (angle==360)
				angle=180;

			if (h<0)
				h=int32((rand()%32768)/32767*(360-angle));

			increment=delta_width/points;
			var increment2=delta_width/len;
			var x2=base_left;
			var y2=delta_height+50;
			for (i=0;i<len;i++) {
				var fill=PieChart::HSVtoRGB(h, s, v);
				h+=angle;
				if (h>=360)
					h=angle-(h-360);

				var vector=value_vector[i];
				if (vector) {
					result+="<path d=\"M${base_left} $start ";
					len2=length vector;
					var x=base_left;
					for (j=0;j<len2;j++) {
						item=vector[j];
						if (item<min)
							item=min;
						if (item>max)
							item=max;
						var translated=start-((item-min)*real_points);
						if (j)
							result+=", ";
						result+="$x $translated";
						x+=increment;
					}
					x-=increment;
					if (type)
						result+=", $x $start Z\" style=\"fill: $fill;fill-opacity: 0.2;stroke:none;\"/>\n";
					else
						result+=", $x $start Z\" style=\"fill: none;fill-opacity: 0.1; stroke:$fill; stroke-width:1;\"/>\n";

					result+="<rect x=\"$x2\" y=\"$y2\" width=\"20\" height=\"10\"\n"+
						"	style=\"stroke: none;\n";
					result+="		fill-opacity: 0.2;\n";
					result+="		fill: $fill\"/>\n";
					result+="<text x=\"${x2+25}\" y=\"${y2+10}\"\n"+
						"	style=\"font-family:verdana, arial, sans-serif;\n"+
						"		font-size: 12;\n"+
						"		fill: black;\n"+
						"		stroke: none\">\n"+
						"	<![CDATA[${series[i]}]]>\n"+
						"</text>\n";
					x2+=increment2;

				}
			}
		}

		result+="</svg>\n";

		return result;
	}
}
