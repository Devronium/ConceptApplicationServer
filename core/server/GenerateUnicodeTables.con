#!/usr/local/bin/concept

include DirectoryList.con
import standard.lang.cli

class Main {
	Reversed(unicodeval) {
		var str = "";
		if (typeof unicodeval == "string")
			str = StringToHex(unicodeval);
		else
			str = NumberToHex(unicodeval);
		if (length str % 2)
			str = "0" + str;
		var str2 = "";
		for (var i = 0; i < length str; i += 2)
			str2 += "\\x" + str[i] + str[i + 1];
		return str2;
	}

	Do(content, var is_2, var reversed) {
		var list = "";
		reversed = "";
		is_2 = false;
		var arr = StrSplit(content, "\n");
		for (var i = 0; i < length arr; i++) {
			var line = trim(arr[i]);
			if ((line) && (line[0] != '#') && (line[0] != ';') && (Pos(line, "<control>") <= 0) && (Pos(line, "(undefined)") <= 0)) {
				line = StrReplace(line, "\t", " ");
				var arr2 = StrSplit(line, " ");
				var charval = arr2[0];
				var unicodeval = arr2[1];
				if ((charval[0] + charval[1] == "0x") && (unicodeval[0] + unicodeval[1] == "0x")) {
					var charval_n = HexToNumber(charval);
					var unicodeval_n = HexToNumber(unicodeval);
					if (charval_n > 0xFF) // || (unicodeval_n > 0xFFFF)
						is_2 = true;// return list;
					if ((charval_n != unicodeval_n) || (charval_n > 0xFF)) {
						charval = NumberToHex(charval_n);
						unicodeval = NumberToHex(unicodeval_n);
						while (length charval < 2)
							charval = "0" + charval;
						while (length unicodeval < 4)
							unicodeval = "0" + unicodeval;
						if (list)
							list += ",";
						list += "0x$charval:0x$unicodeval";	
	
						var reversed_val = Reversed(U_(unicodeval_n));
						if (reversed_val) {
							if (reversed)
								reversed += ",";
							reversed += "\"$reversed_val\":\"${Reversed(charval_n)}\"";
						}
					}
				}
			}
		}
		return list;
	}

	Main() {
		var arg = CLArg();
		var dir = ".";
		if (arg)
			dir = arg[0];

		var arr = DirectoryList::ListByExt(dir, ["txt"]);
		var charsets = "";
		var charsets2 = "";
		var reversed_charsets = "";
		var encodings = "";
		for (var i = 0; i < length arr; i++) {
			var fname = arr[i];
			var name = ToLower(StrSplit(fname, ".")[0]);
			echo "Processing $name ...\n";
			var data = Do(ReadFile(fname), var is_2, var reversed);
			if (data) {
				if (encodings)
					encodings += ", ";
				encodings += "\"" + ToLower(name) + "\"";
				if (is_2) {
					if (charsets2)
						charsets2 += ", ";
					charsets2 += "\"$name\": [$data]";
				} else {
					if (charsets)
						charsets += ", ";
					charsets += "\"$name\": [$data]";
				}
				if (reversed) {
					if (reversed_charsets)
						reversed_charsets += ", ";
					reversed_charsets += "\"$name\": [$reversed]";
				}
			}
		}
		WriteFile("// Autogenerated conversion tables based on UNICODE tables\n\ndefine UNICODE_ENCODINGS [$encodings]\n\ndefine UNICODE_CHARSETS [$charsets]\n\ndefine UNICODE_CHARSETS2 [$charsets2]\n\ndefine UNICODE_UTF8 [$reversed_charsets]", "UnicodeCharsets.con");
	}
}
