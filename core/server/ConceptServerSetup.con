#!/usr/local/bin/concept -chdir
import standard.C.io
import standard.lib.cripto
import standard.lib.str
import standard.lang.serialize

define WELCOME_MESSAGE		"Welcome to Concept Application Server 4 quick setup.\n\n"
define GENERATE_MESSAGE		"Generating server keys ... \n"
define DONE_MESSAGE		"done \n"
define WARNING_DEVELOPER	"WARNING: Your Concept Application Server development tools (CIDE and GyroGears) will not be accessible from remote host.\n"
define MIN_PASSWORD		8

class Main {
	GenerateKeys(path, old_format = false) {
		if (old_format)
			rsa_generate_keys(1024, var priv, var pub);
		else {
			echo " ... generating ECC 521-bit key in $path\n";
			if (ECCKeys(521, pub, priv)) {
				echo "Error generating keys\n";
				return 0;
			} 
			pub = "ecc-" + pub;
			priv = "ecc!" + priv;
		}
	
		WriteFile(pub, "$path/server.certificate");
		WriteFile(priv, "$path/server.key");
		if ((pub) && (priv))	
			return 1;
		return 0;
	}

	DevelperUserPass(path) {
		echo "Reading $path/developers.lst ...\n";
		var data = ReadFile(path + "/developers.lst");
		var[] arr;
		if (data) {
			arr = UnBinarizeObject(data);
			if (arr) {
				if (length arr == 1)
					echo "Development account already set. Not entering an username will preserve the previous account.\n";
				else
					echo "Development account already set. Not entering an username will preserve the previous ${length arr} accounts.\n";
			}
		}
		echo "You may now create an user to be used for remote access only. If no users are created, CIDE and GyroGears will be accessible only from localhost.\n\nUsername: ";
		var username = trim(gets());
		if (username) {
			do {
				echo "Password: ";
				var password = getpassword();
				if (!password) {
					echo "\n";
					break;
				}
				if (length password < MIN_PASSWORD) {
					echo "\nPassword is too short. It should be at least " + MIN_PASSWORD + " characters\n";
					continue;
				}
				echo "\nPassword again: ";
				var password2 = getpassword();
				echo "\n";
			} while (password != password2);
		}
		if ((username) && (password)) {
			arr[username] = sha1(password);
			data = BinarizeObject(arr);
			if (!WriteFile(data, path + "/developers.lst"))
				echo "ERROR WRITING USER TABLE IN $path/developers.lst\n";
			return 1;
		} else {
			if (arr) {
				echo "No changes made to the developers table\n";
				return 1;
			} else
				echo WARNING_DEVELOPER;
		}
	}

	Main() {
		var ini_file="/usr/local/etc/concept.ini";
		if (!FileExists(ini_file))
			ini_file="/usr/etc/concept.ini";
		if (!FileExists(ini_file))
			ini_file="/etc/concept.ini";
		if (!FileExists(ini_file))
			ini_file=getcwd()+"/concept.ini";

		echo WELCOME_MESSAGE;
		echo GENERATE_MESSAGE;
		var step = 0;
		var path = IniGet(ini_file, "Paths", "Certificate", ".");
		step += GenerateKeys(path);
		echo DONE_MESSAGE;
		step += DevelperUserPass(path);
		if (step == 2) {
			echo "Congratulations! Your Concept Application Server is installed and secured.\n";
		} else {
			echo "WARNING: Your server setup encountered errors.\n";
		}
	}
}
