#ifndef __LIBRARY_H
#define __LIBRARY_H

#include "stdlibrary.h"

extern "C" {
CONCEPT_DLL_API ON_CREATE_CONTEXT  MANAGEMENT_PARAMETERS;
CONCEPT_DLL_API ON_DESTROY_CONTEXT MANAGEMENT_PARAMETERS;

CONCEPT_FUNCTION(mpz_clear)
CONCEPT_FUNCTION(mpz_init)
CONCEPT_FUNCTION(mpz_clears)
CONCEPT_FUNCTION(mpz_inits)

CONCEPT_FUNCTION(mpz_set)                   // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_set_ui)                // (mpz_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpz_set_si)                // (mpz_t rop, signed long int op)
CONCEPT_FUNCTION(mpz_set_d)                 // (mpz_t rop, double op)
CONCEPT_FUNCTION(mpz_set_q)                 // (mpz_t rop, mpq_t op)
CONCEPT_FUNCTION(mpz_set_f)                 // (mpz_t rop, mpf_t op)
CONCEPT_FUNCTION(mpz_set_str)               // (mpz_t rop, char* str, int base)
CONCEPT_FUNCTION(mpz_swap)                  // (mpz_t rop1, mpz_t rop2)
CONCEPT_FUNCTION(mpz_init_set)              // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_init_set_ui)           // (mpz_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpz_init_set_si)           // (mpz_t rop, signed long int op)
CONCEPT_FUNCTION(mpz_init_set_d)            // (mpz_t rop, double op)
CONCEPT_FUNCTION(mpz_init_set_str)          // (mpz_t rop, char* str, int base)
CONCEPT_FUNCTION(mpz_add)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_add_ui)                // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_sub)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_sub_ui)                // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_ui_sub)                // (mpz_t rop, unsigned long int op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_mul)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_mul_si)                // (mpz_t rop, mpz_t op1, long int op2)
CONCEPT_FUNCTION(mpz_mul_ui)                // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_addmul)                // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_addmul_ui)             // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_submul)                // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_submul_ui)             // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_mul_2exp)              // (mpz_t rop, mpz_t op1, mp_bitcnt_t op2)
CONCEPT_FUNCTION(mpz_neg)                   // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_abs)                   // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_cdiv_q)                // (mpz_t q, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_cdiv_r)                // (mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_cdiv_qr)               // (mpz_t q, mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_cdiv_q_ui)             // (mpz_t q, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_cdiv_r_ui)             // (mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_cdiv_qr_ui)            // (mpz_t q, mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_cdiv_ui)               // (mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_cdiv_q_2exp)           // (mpz_t q, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_cdiv_r_2exp)           // (mpz_t r, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_fdiv_q)                // (mpz_t q, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_fdiv_r)                // (mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_fdiv_qr)               // (mpz_t q, mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_fdiv_q_ui)             // (mpz_t q, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_fdiv_r_ui)             // (mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_fdiv_qr_ui)            // (mpz_t q, mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_fdiv_ui)               // (mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_fdiv_q_2exp)           // (mpz_t q, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_fdiv_r_2exp)           // (mpz_t r, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_tdiv_q)                // (mpz_t q, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_tdiv_r)                // (mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_tdiv_qr)               // (mpz_t q, mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_tdiv_q_ui)             // (mpz_t q, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_tdiv_r_ui)             // (mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_tdiv_qr_ui)            // (mpz_t q, mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_tdiv_ui)               // (mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_tdiv_q_2exp)           // (mpz_t q, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_tdiv_r_2exp)           // (mpz_t r, mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_mod)                   // (mpz_t r, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_mod_ui)                // (mpz_t r, mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_divexact)              // (mpz_t q, mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_divexact_ui)           // (mpz_t q, mpz_t n, unsigned long d)
CONCEPT_FUNCTION(mpz_divisible_p)           // (mpz_t n, mpz_t d)
CONCEPT_FUNCTION(mpz_divisible_ui_p)        // (mpz_t n, unsigned long int d)
CONCEPT_FUNCTION(mpz_divisible_2exp_p)      // (mpz_t n, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_congruent_p)           // (mpz_t n, mpz_t c, mpz_t d)
CONCEPT_FUNCTION(mpz_congruent_ui_p)        // (mpz_t n, unsigned long int c, unsigned long int d)
CONCEPT_FUNCTION(mpz_congruent_2exp_p)      // (mpz_t n, mpz_t c, mp_bitcnt_t b)
CONCEPT_FUNCTION(mpz_powm)                  // (mpz_t rop, mpz_t base, mpz_t exp, mpz_t mod)
CONCEPT_FUNCTION(mpz_powm_ui)               // (mpz_t rop, mpz_t base, unsigned long int exp, mpz_t mod)
CONCEPT_FUNCTION(mpz_powm_sec)              // (mpz_t rop, mpz_t base, mpz_t exp, mpz_t mod)
CONCEPT_FUNCTION(mpz_pow_ui)                // (mpz_t rop, mpz_t base, unsigned long int exp)
CONCEPT_FUNCTION(mpz_ui_pow_ui)             // (mpz_t rop, unsigned long int base, unsigned long int exp)
CONCEPT_FUNCTION(mpz_root)                  // (mpz_t rop, mpz_t op, unsigned long int n)
CONCEPT_FUNCTION(mpz_rootrem)               // (mpz_t root, mpz_t rem, mpz_t u, unsigned long int n)
CONCEPT_FUNCTION(mpz_sqrt)                  // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_sqrtrem)               // (mpz_t rop1, mpz_t rop2, mpz_t op)
CONCEPT_FUNCTION(mpz_perfect_power_p)       // (mpz_t op)
CONCEPT_FUNCTION(mpz_perfect_square_p)      // (mpz_t op)
CONCEPT_FUNCTION(mpz_probab_prime_p)        // (mpz_t n, int reps)
CONCEPT_FUNCTION(mpz_nextprime)             // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_gcd)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_gcd_ui)                // (mpz_t rop, mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_gcdext)                // (mpz_t g, mpz_t s, mpz_t t, mpz_t a, mpz_t b)
CONCEPT_FUNCTION(mpz_lcm)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_lcm_ui)                // (mpz_t rop, mpz_t op1, unsigned long op2)
CONCEPT_FUNCTION(mpz_invert)                // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_jacobi)                // (mpz_t a, mpz_t b)
CONCEPT_FUNCTION(mpz_legendre)              // (mpz_t a, mpz_t p)
CONCEPT_FUNCTION(mpz_kronecker)             // (mpz_t a, mpz_t b)
CONCEPT_FUNCTION(mpz_kronecker_si)          // (mpz_t a, long b)
CONCEPT_FUNCTION(mpz_kronecker_ui)          // (mpz_t a, unsigned long b)
CONCEPT_FUNCTION(mpz_si_kronecker)          // (long a, mpz_t b)
CONCEPT_FUNCTION(mpz_ui_kronecker)          // (unsigned long a, mpz_t b)
CONCEPT_FUNCTION(mpz_remove)                // (mpz_t rop, mpz_t op, mpz_t f)
CONCEPT_FUNCTION(mpz_fac_ui)                // (mpz_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpz_bin_ui)                // (mpz_t rop, mpz_t n, unsigned long int k)
CONCEPT_FUNCTION(mpz_bin_uiui)              // (mpz_t rop, unsigned long int n, unsigned long int k)
CONCEPT_FUNCTION(mpz_fib_ui)                // (mpz_t fn, unsigned long int n)
CONCEPT_FUNCTION(mpz_fib2_ui)               // (mpz_t fn, mpz_t fnsub1, unsigned long int n)
CONCEPT_FUNCTION(mpz_lucnum_ui)             // (mpz_t ln, unsigned long int n)
CONCEPT_FUNCTION(mpz_lucnum2_ui)            // (mpz_t ln, mpz_t lnsub1, unsigned long int n)
CONCEPT_FUNCTION(mpz_cmp)                   // (mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_cmp_d)                 // (mpz_t op1, double op2)
CONCEPT_FUNCTION(mpz_cmp_si)                // (mpz_t op1, signed long int op2)
CONCEPT_FUNCTION(mpz_cmp_ui)                // (mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_cmpabs)                // (mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_cmpabs_d)              // (mpz_t op1, double op2)
CONCEPT_FUNCTION(mpz_cmpabs_ui)             // (mpz_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpz_sgn)                   // (mpz_t op)
CONCEPT_FUNCTION(mpz_and)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_ior)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_xor)                   // (mpz_t rop, mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_com)                   // (mpz_t rop, mpz_t op)
CONCEPT_FUNCTION(mpz_popcount)              // (mpz_t op)
CONCEPT_FUNCTION(mpz_hamdist)               // (mpz_t op1, mpz_t op2)
CONCEPT_FUNCTION(mpz_scan0)                 // (mpz_t op, mp_bitcnt_t starting_bit)
CONCEPT_FUNCTION(mpz_scan1)                 // (mpz_t op, mp_bitcnt_t starting_bit)
CONCEPT_FUNCTION(mpz_setbit)                // (mpz_t rop, mp_bitcnt_t bit_index)
CONCEPT_FUNCTION(mpz_clrbit)                // (mpz_t rop, mp_bitcnt_t bit_index)
CONCEPT_FUNCTION(mpz_combit)                // (mpz_t rop, mp_bitcnt_t bit_index)
CONCEPT_FUNCTION(mpz_tstbit)                // (mpz_t op, mp_bitcnt_t bit_index)
CONCEPT_FUNCTION(mpz_out_str)               // (FILE* stream, int base, mpz_t op)
CONCEPT_FUNCTION(mpz_inp_str)               // (mpz_t rop, FILE* stream, int base)
CONCEPT_FUNCTION(mpz_out_raw)               // (FILE* stream, mpz_t op)
CONCEPT_FUNCTION(mpz_inp_raw)               // (mpz_t rop, FILE* stream)
CONCEPT_FUNCTION(mpz_urandomb)              // (mpz_t rop, gmp_randstate_t state, mp_bitcnt_t n)
CONCEPT_FUNCTION(mpz_urandomm)              // (mpz_t rop, gmp_randstate_t state, mpz_t n)
CONCEPT_FUNCTION(mpz_rrandomb)              // (mpz_t rop, gmp_randstate_t state, mp_bitcnt_t n)
CONCEPT_FUNCTION(mpz_random)                // (mpz_t rop, mp_size_t max_size)
CONCEPT_FUNCTION(mpz_random2)               // (mpz_t rop, mp_size_t max_size)
CONCEPT_FUNCTION(mpz_import)                // (mpz_t rop, size_t count, int order, size_t size, int endian, size_t nails, const void* op)
CONCEPT_FUNCTION(mpz_export)                // (void* rop, size_t* countp, int order, size_t size, int endian, size_t nails, mpz_t op)
CONCEPT_FUNCTION(mpz_fits_ulong_p)          // (mpz_t op)
CONCEPT_FUNCTION(mpz_fits_slong_p)          // (mpz_t op)
CONCEPT_FUNCTION(mpz_fits_uint_p)           // (mpz_t op)
CONCEPT_FUNCTION(mpz_fits_sint_p)           // (mpz_t op)
CONCEPT_FUNCTION(mpz_fits_ushort_p)         // (mpz_t op)
CONCEPT_FUNCTION(mpz_fits_sshort_p)         // (mpz_t op)
CONCEPT_FUNCTION(mpz_odd_p)                 // (mpz_t op)
CONCEPT_FUNCTION(mpz_even_p)                // (mpz_t op)
CONCEPT_FUNCTION(mpz_sizeinbase)            // (mpz_t op, int base)
CONCEPT_FUNCTION(mpz_getlimbn)              // (mpz_t op, mp_size_t n)
CONCEPT_FUNCTION(mpz_size)                  // (mpz_t op)
CONCEPT_FUNCTION(gmp_randinit_default)      // (gmp_randstate_t state)
CONCEPT_FUNCTION(gmp_randinit_mt)           // (gmp_randstate_t state)
CONCEPT_FUNCTION(gmp_randinit_lc_2exp)      // (gmp_randstate_t state, mpz_t a, unsigned long c, mp_bitcnt_t m2exp)
CONCEPT_FUNCTION(gmp_randinit_lc_2exp_size) // (gmp_randstate_t state, mp_bitcnt_t size)
CONCEPT_FUNCTION(gmp_randinit_set)          // (gmp_randstate_t rop, gmp_randstate_t op)
CONCEPT_FUNCTION(gmp_randclear)             // (gmp_randstate_t state)
CONCEPT_FUNCTION(gmp_randseed)              // (gmp_randstate_t state, mpz_t seed)
CONCEPT_FUNCTION(gmp_randseed_ui)           // (gmp_randstate_t state, unsigned long int seed)
CONCEPT_FUNCTION(gmp_urandomb_ui)           // (gmp_randstate_t state, unsigned long n)
CONCEPT_FUNCTION(gmp_urandomm_ui)           // (gmp_randstate_t state, unsigned long n)
CONCEPT_FUNCTION(mpz_get_ui)                // (mpz_t op)
CONCEPT_FUNCTION(mpz_get_si)                // (mpz_t op)
CONCEPT_FUNCTION(mpz_get_d)                 // (mpz_t op)
CONCEPT_FUNCTION(mpz_get_d_2exp)            // (signed long int* exp, mpz_t op)
CONCEPT_FUNCTION(mpz_get_str)               // (char* str, int base, mpz_t op)

CONCEPT_FUNCTION(mpq_init)                  // (mpq_t x)
CONCEPT_FUNCTION(mpq_clear)                 // (mpq_t x)
CONCEPT_FUNCTION(mpq_inits)                 // (mpq_t x)
CONCEPT_FUNCTION(mpq_clears)                // (mpq_t x)
CONCEPT_FUNCTION(mpq_set)                   // (mpq_t rop, mpq_t op)
CONCEPT_FUNCTION(mpq_set_z)                 // (mpq_t rop, mpz_t op)
CONCEPT_FUNCTION(mpq_set_str)               // (mpq_t rop, char* str, int base)
CONCEPT_FUNCTION(mpq_swap)                  // (mpq_t rop1, mpq_t rop2)
CONCEPT_FUNCTION(mpq_get_d)                 // (mpq_t op)
CONCEPT_FUNCTION(mpq_set_d)                 // (mpq_t rop, double op)
CONCEPT_FUNCTION(mpq_set_f)                 // (mpq_t rop, mpf_t op)
CONCEPT_FUNCTION(mpq_get_str)               // (char* str, int base, mpq_t op)
CONCEPT_FUNCTION(mpq_add)                   // (mpq_t sum, mpq_t addend1, mpq_t addend2)
CONCEPT_FUNCTION(mpq_sub)                   // (mpq_t difference, mpq_t minuend, mpq_t subtrahend)
CONCEPT_FUNCTION(mpq_mul)                   // (mpq_t product, mpq_t multiplier, mpq_t multiplicand)
CONCEPT_FUNCTION(mpq_mul_2exp)              // (mpq_t rop, mpq_t op1, mp_bitcnt_t op2)
CONCEPT_FUNCTION(mpq_div)                   // (mpq_t quotient, mpq_t dividend, mpq_t divisor)
CONCEPT_FUNCTION(mpq_div_2exp)              // (mpq_t rop, mpq_t op1, mp_bitcnt_t op2)
CONCEPT_FUNCTION(mpq_neg)                   // (mpq_t negated_operand, mpq_t operand)
CONCEPT_FUNCTION(mpq_abs)                   // (mpq_t rop, mpq_t op)
CONCEPT_FUNCTION(mpq_inv)                   // (mpq_t inverted_number, mpq_t number)
CONCEPT_FUNCTION(mpq_cmp)                   // (mpq_t op1, mpq_t op2)
CONCEPT_FUNCTION(mpq_cmp_ui)                // (mpq_t op1, unsigned long int num2, unsigned long int den2)
CONCEPT_FUNCTION(mpq_cmp_si)                // (mpq_t op1, long int num2, unsigned long int den2)
CONCEPT_FUNCTION(mpq_sgn)                   // (mpq_t op)
CONCEPT_FUNCTION(mpq_equal)                 // (mpq_t op1, mpq_t op2)
CONCEPT_FUNCTION(mpq_numref)                // (mpq_t op)
CONCEPT_FUNCTION(mpq_denref)                // (mpq_t op)
CONCEPT_FUNCTION(mpq_get_num)               // (mpz_t numerator, mpq_t rational)
CONCEPT_FUNCTION(mpq_get_den)               // (mpz_t denominator, mpq_t rational)
CONCEPT_FUNCTION(mpq_set_num)               // (mpq_t rational, mpz_t numerator)
CONCEPT_FUNCTION(mpq_set_den)               // (mpq_t rational, mpz_t denominator)
CONCEPT_FUNCTION(mpq_out_str)               // (FILE* stream, int base, mpq_t op)
CONCEPT_FUNCTION(mpq_inp_str)               // (mpq_t rop, FILE* stream, int base)

CONCEPT_FUNCTION(mpf_set_default_prec)      // (mp_bitcnt_t prec)
CONCEPT_FUNCTION(mpf_get_default_prec)      // (void)
CONCEPT_FUNCTION(mpf_init)                  // (mpf_t x)
CONCEPT_FUNCTION(mpf_inits)
CONCEPT_FUNCTION(mpf_init2)                 // (mpf_t x, mp_bitcnt_t prec)
CONCEPT_FUNCTION(mpf_clear)                 // (mpf_t x)
CONCEPT_FUNCTION(mpf_clears)
CONCEPT_FUNCTION(mpf_get_prec)              // (mpf_t op)
CONCEPT_FUNCTION(mpf_set_prec)              // (mpf_t rop, mp_bitcnt_t prec)
CONCEPT_FUNCTION(mpf_set_prec_raw)          // (mpf_t rop, mp_bitcnt_t prec)
CONCEPT_FUNCTION(mpf_set)                   // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_set_ui)                // (mpf_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpf_set_si)                // (mpf_t rop, signed long int op)
CONCEPT_FUNCTION(mpf_set_d)                 // (mpf_t rop, double op)
CONCEPT_FUNCTION(mpf_set_z)                 // (mpf_t rop, mpz_t op)
CONCEPT_FUNCTION(mpf_set_q)                 // (mpf_t rop, mpq_t op)
CONCEPT_FUNCTION(mpf_set_str)               // (mpf_t rop, char* str, int base)
CONCEPT_FUNCTION(mpf_swap)                  // (mpf_t rop1, mpf_t rop2)
CONCEPT_FUNCTION(mpf_init_set)              // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_init_set_ui)           // (mpf_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpf_init_set_si)           // (mpf_t rop, signed long int op)
CONCEPT_FUNCTION(mpf_init_set_d)            // (mpf_t rop, double op)
CONCEPT_FUNCTION(mpf_init_set_str)          // (mpf_t rop, char* str, int base)
CONCEPT_FUNCTION(mpf_get_d)                 // (mpf_t op)
CONCEPT_FUNCTION(mpf_get_d_2exp)            // (signed long int* exp, mpf_t op)
CONCEPT_FUNCTION(mpf_get_si)                // (mpf_t op)
CONCEPT_FUNCTION(mpf_get_ui)                // (mpf_t op)
CONCEPT_FUNCTION(mpf_get_str)               // (char* str, mp_exp_t* expptr, int base, size_t n_digits, mpf_t op)
CONCEPT_FUNCTION(mpf_add)                   // (mpf_t rop, mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_add_ui)                // (mpf_t rop, mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_sub)                   // (mpf_t rop, mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_ui_sub)                // (mpf_t rop, unsigned long int op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_sub_ui)                // (mpf_t rop, mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_mul)                   // (mpf_t rop, mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_mul_ui)                // (mpf_t rop, mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_div)                   // (mpf_t rop, mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_ui_div)                // (mpf_t rop, unsigned long int op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_div_ui)                // (mpf_t rop, mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_sqrt)                  // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_sqrt_ui)               // (mpf_t rop, unsigned long int op)
CONCEPT_FUNCTION(mpf_pow_ui)                // (mpf_t rop, mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_neg)                   // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_abs)                   // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_mul_2exp)              // (mpf_t rop, mpf_t op1, mp_bitcnt_t op2)
CONCEPT_FUNCTION(mpf_div_2exp)              // (mpf_t rop, mpf_t op1, mp_bitcnt_t op2)
CONCEPT_FUNCTION(mpf_cmp)                   // (mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_cmp_d)                 // (mpf_t op1, double op2)
CONCEPT_FUNCTION(mpf_cmp_ui)                // (mpf_t op1, unsigned long int op2)
CONCEPT_FUNCTION(mpf_cmp_si)                // (mpf_t op1, signed long int op2)
CONCEPT_FUNCTION(mpf_eq)                    // (mpf_t op1, mpf_t op2, mp_bitcnt_t op3)
CONCEPT_FUNCTION(mpf_reldiff)               // (mpf_t rop, mpf_t op1, mpf_t op2)
CONCEPT_FUNCTION(mpf_sgn)                   // (mpf_t op)
CONCEPT_FUNCTION(mpf_out_str)               // (FILE* stream, int base, size_t n_digits, mpf_t op)
CONCEPT_FUNCTION(mpf_inp_str)               // (mpf_t rop, FILE* stream, int base)
CONCEPT_FUNCTION(mpf_ceil)                  // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_floor)                 // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_trunc)                 // (mpf_t rop, mpf_t op)
CONCEPT_FUNCTION(mpf_integer_p)             // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_ulong_p)          // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_slong_p)          // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_uint_p)           // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_sint_p)           // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_ushort_p)         // (mpf_t op)
CONCEPT_FUNCTION(mpf_fits_sshort_p)         // (mpf_t op)
CONCEPT_FUNCTION(mpf_urandomb)              // (mpf_t rop, gmp_randstate_t state, mp_bitcnt_t nbits)
CONCEPT_FUNCTION(mpf_random2)               // (mpf_t rop, mp_size_t max_size, mp_exp_t exp)
}
#endif // __LIBRARY_H
